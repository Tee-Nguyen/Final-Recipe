@using Microsoft.AspNetCore.Identity
@using MyRecipe.Models.Users

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{   
    var user = await UserManager.FindByNameAsync(User.Identity.Name);
    
    <li class="nav-item">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="navDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @user.FirstName @user.Name
            </button>
            <div class="dropdown-menu text-dark" aria-labelledby="navDropdown">
                <a class="dropdown-item text-dark" id="myprofile" asp-area="Identity" asp-page="/Account/Manage/Index">My Profile</a>
                <a class="dropdown-item text-dark" asp-controller="Recipes" asp-action="Index" asp-route-userId="@user.Id">My Recipes</a>

                <div class="dropdown-divider"></div>
                <div class="dropdown-item">
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Recipes", new { area = "" })">
                        <button id="logout" type="submit" class="nav-link btn btn-link text-dark p-0">Logout</button>
                    </form>
                </div>
            </div>
        </div>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Sign up</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Sign in</a>
    </li>
}
</ul>

<!-- 

<li class="nav-item align-self-center">
    <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"></a>
</li>
<li class="nav-item">
    
</li>

-->